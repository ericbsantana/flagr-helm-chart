apiVersion: v1
kind: Pod
metadata:
  name: "{{ .Release.Name }}-basic-auth-test"
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  containers:
    - name: curl-test
      image: curlimages/curl:8.1.2
      command: ['/bin/sh', '-c']
      args:
        - |
          auth_enabled="false"
          auth_username=""
          auth_password=""
          
          {{- range .Values.extraEnvs }}
          {{- if eq .name "FLAGR_BASIC_AUTH_ENABLED" }}
          auth_enabled="{{ .value }}"
          {{- end }}
          {{- if eq .name "FLAGR_BASIC_AUTH_USERNAME" }}
          auth_username="{{ .value }}"
          {{- end }}
          {{- if eq .name "FLAGR_BASIC_AUTH_PASSWORD" }}
          auth_password="{{ .value }}"
          {{- end }}
          {{- end }}
          
          if [ "$auth_enabled" != "true" ]; then
            echo "FLAGR_BASIC_AUTH_ENABLED is false, thus bypassing test"
            exit 0
          fi
          
          if [ -z "$auth_username" ] || [ -z "$auth_password" ]; then
            echo "FLAGR_BASIC_AUTH_USERNAME or FLAGR_BASIC_AUTH_PASSWORD is empty, thus bypassing test"
            exit 0
          fi
          
          response_code=$(curl -s -o /dev/null -w "%{http_code}" \
            -u "${auth_username}:${auth_password}" \
            http://{{ .Release.Name }}.{{ .Release.Namespace }}:{{ .Values.service.port }})
          
          echo "Response code with valid credentials: ${response_code}"
          
          if [ "$response_code" -lt 200 ] || [ "$response_code" -ge 300 ]; then
            echo "Endpoint returned unexpected status code with valid credentials: $response_code"
            exit 1
          fi
          
          response_code=$(curl -s -o /dev/null -w "%{http_code}" \
            -u "blabla:wrong_password" \
            http://{{ .Release.Name }}.{{ .Release.Namespace }}:{{ .Values.service.port }})
          
          echo "Response code with invalid credentials: ${response_code}"
          
          if [ "$response_code" -ne 401 ]; then
            echo "Expected 401 status code with invalid credentials, got: $response_code"
            exit 1
          fi
          
          response_code=$(curl -s -o /dev/null -w "%{http_code}" \
            http://{{ .Release.Name }}.{{ .Release.Namespace }}:{{ .Values.service.port }}/api/v1/health)
          
          echo "Response code for whitelisted endpoint without auth: ${response_code}"
          
          if [ "$response_code" -lt 200 ] || [ "$response_code" -ge 300 ]; then
            echo "Whitelisted endpoint returned unexpected status code: $response_code"
            exit 1
          fi
          
          echo "Basic authentication test passed successfully"
          exit 0
  restartPolicy: Never